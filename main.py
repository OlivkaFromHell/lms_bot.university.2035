import datetime as dt
import sqlite3
import telebot
import requests
from json import loads

from deadline import deadline_list  # file with list of deadlines
from scores_stat import my_progress  # return web-page with user progress
from config import token

bot = telebot.TeleBot(token)

deadline = dt.datetime(2021, 6, 21)

# keyboard
keyboard = telebot.types.ReplyKeyboardMarkup(True)
keyboard.row('–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å', '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö')
keyboard.row('–°–ø–∏—Å–æ–∫ –¥–µ–¥–ª–∞–π–Ω–æ–≤')

# notification keyboard
keyboard_deadline = telebot.types.ReplyKeyboardMarkup(True)
keyboard_deadline.row('–û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')


def send(id, text, reply_markup=''):
    'send message to user from bot'
    bot.send_message(id, text, reply_markup=reply_markup)


class User:
    def __init__(self, mail):
        self.mail = mail
        self.notification = True


@bot.message_handler(commands=['start'])
def answer(message):
    msg = bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø - —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –∫—É—Ä—Å–µ SAPtest.\n'
                                            '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n'
                                            '–í–≤–µ–¥–∏ —Å–≤–æ—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –ø—Ä–æ—Ö–æ–¥–∏—à—å –¥–∞–Ω–Ω—ã–π –∫—É—Ä—Å\n'
                                            '‚¨á')
    bot.register_next_step_handler(msg, process_reg)


def process_reg(message):
    try:

        telegram_id = message.from_user.id
        req = requests.get(f"https://moodle.vk-apps.dev/webservice/rest/server.php?"
                           f"wstoken=c6fbe6f2b693c965cd939fcba3526cea&wsfunction=core_user_get_users"
                           f"&moodlewsrestformat=json&criteria[1][key]=email&criteria[1][value]={message.text}")
        response = loads(req.text)

        if response['users'][0]['email'] == message.text:
            try:
                # connect with sqlite db
                conn = sqlite3.connect("data/user_database.db")
                cursor = conn.cursor()
                sql = "INSERT INTO user_db VALUES (?,?,?,?)"
                val = [(telegram_id, response['users'][0]['id'], response['users'][0]['fullname'],
                        response['users'][0]['email'])]
                cursor.executemany(sql, val)
                conn.commit()


            except sqlite3.IntegrityError:
                pass
                # bot.send_message(message.chat.id, '–£–ø—Å.. –ö—Ç–æ-—Ç–æ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ —Å –¥–∞–Ω–Ω—ã–º email')
            bot.send_message(message.chat.id, '–°—É–ø–µ—Ä, –º—ã –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏, –∫—Ç–æ —Ç—ã!\n\n'
                                              '–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:\n'
                                              '–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å ‚Äì –ø–æ–∫–∞–∂—É —Ç–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π\n'
                                              '–°–ø–∏—Å–æ–∫ –¥–µ–¥–ª–∞–π–Ω–æ–≤ ‚Äì –≤—ã–≤–µ–¥—É –≤—Å–µ –≥–æ—Ä—è—â–∏–µ –¥–µ–¥–ª–∞–π–Ω—ã –∫—É—Ä—Å–∞ –∏ –±—É–¥—É –±–µ—Ä–µ–∂–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å\n'
                                              '–ò –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –∑–∞–±—ã–ª –∫–æ–º–∞–Ω–¥—ã ‚Äì –ø–∏—à–∏ /help\n\n'
                                              '–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?', reply_markup=keyboard)

        else:
            msg = bot.reply_to(message, '–ß—Ç–æ-—Ç–æ —è –Ω–µ –Ω–∞—à–µ–ª —Ç–µ–±—è –≤ –±–∞–∑–µ...\n\n'
                                        '–ü—Ä–æ–≤–µ—Ä—å, —Å –∫–∞–∫–æ–π –ø–æ—á—Ç–∏ —Ç—ã –∑–∞–ø–∏—Å—ã–≤–∞–ª—Å—è –Ω–∞ –∫—É—Ä—Å, –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑\n\n'
                                        '–í–≤–µ–¥–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –ø—Ä–æ—Ö–æ–¥–∏—à—å –¥–∞–Ω–Ω—ã–π –∫—É—Ä—Å\n\n'
                                        '‚¨á')
    except Exception as e:
        bot.register_next_step_handler(msg, process_reg)


@bot.message_handler(commands=['help'])
def answer(message):
    help_msg = ('–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤–≤–æ–¥–µ /help:\n\n'
                '–£ —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫ –≤–æ–ø—Ä–æ—Å? –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å\n\n'
                '–ó–¥–µ—Å—å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –∫—Ä–∞—Ç–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:\n\n'
                '*–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å* ‚Äì —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—ã –º–æ–∂–µ—à—å'
                '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ —Å–¥–∞–Ω–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º, –∞ —Ç–∞–∫–∂–µ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª\n\n'
                '*–°–ø–∏—Å–æ–∫ –¥–µ–¥–ª–∞–π–Ω–æ–≤* ‚Äì –Ω–∞–∂–∞–≤ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –Ω–∞ –∫—É—Ä—Å–µ.\n\n'
                '*–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö* ‚Äì –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö. '
                '–ï—Å–ª–∏ –≤–∫–ª—é—á–∏—à—å, –∑–∞ —Å—É—Ç–∫–∏ –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ —Å–¥–∞—á–∏ —Ç–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. '
                '–¢–∞–∫–∂–µ –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –Ω–µ–¥–µ–ª—å–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç ‚Äì –∫–∞–∫–∏–µ —Ç–µ—Å—Ç—ã –∏ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–¥–æ —Å–¥–∞—Ç—å –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.\n\n'
                '–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏–ª–∏ –≤—ã–ª–µ–∑–ª–∏ –±–∞–≥–∏, –ø–∏—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: @itsdaniilts')
    bot.send_message(message.chat.id, help_msg, parse_mode='Markdown')


chat_id_notifications = {}
user_data = {}

@bot.message_handler(content_types=['text'])
def main(message):
    id = message.chat.id
    msg = message.text

    if msg == '–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å':
        url = my_progress('alimov.rn@edu.spbstu.ru')
        text = f'[–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å]({url})'
        send(id, '–î–ª—è —Ç–≤–æ–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ —è –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n'
                 '–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∏–∑—É—á–∞–π —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å:')
        bot.send_message(id, text, parse_mode='MarkdownV2')

    elif msg == '–°–ø–∏—Å–æ–∫ –¥–µ–¥–ª–∞–π–Ω–æ–≤':
        conn = sqlite3.connect("data/user_database.db")
        cursor = conn.cursor()
        sql = f"SELECT moodle_id FROM user_db WHERE telegram_id = {id}"
        cursor.execute(sql)

        send(id, deadline_list(moodle_id=cursor.fetchone()[0]))
    elif msg == '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö':
        send(id, '–¢—ã –º–æ–∂–µ—à—å –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö –Ω–∞ –∫—É—Ä—Å–µ.'
                 '–¢–µ–ø–µ—Ä—å —Ç—ã —Å –º–µ–Ω—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø—Ä–æ–ø—É—Å—Ç–∏—à—å —Ç–µ—Å—Ç –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ. –ù–∞–≤–µ—Ä–Ω–æ...\n\n'
                 '–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é\n\n‚¨á', reply_markup=keyboard_deadline)
    elif msg == '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
        chat_id_notifications[id] = True
        text_on = ('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö *–≤–∫–ª—é—á–µ–Ω—ã*\n\n'
                   '*–ó–∞ —Å—É—Ç–∫–∏* –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –¥–µ–¥–ª–∞–π–Ω —Å–≥–æ—Ä–∏—Ç, '
                   '–∫–∞—Ä–µ—Ç–∞ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—Å—è –≤ —Ç—ã–∫–≤—É, –∏ —Ç—ã –≤–æ—Å–∫–ª–∏–∫–Ω–µ—à—å ‚Äú—à–µ—Ñ, –≤—Å–µ –ø—Ä–æ–ø–∞–ª–æ‚Äù, —è –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ –æ –Ω–µ–º \n\n'
                   '–ê *–ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º* —è –±—É–¥—É –∫–∏–¥–∞—Ç—å —Ç–µ–±–µ –¥–∞–π–¥–∂–µ—Å—Ç —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞—á –Ω–∞ –∫—É—Ä—Å–µ\n\n'
                   '–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏!')
        bot.send_message(id, text_on, parse_mode='Markdown', reply_markup=keyboard)
    elif msg == '–û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
        chat_id_notifications[id] = False
        text_off = ('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö *–æ—Ç–∫–ª—é—á–µ–Ω—ã*\n\n'
                    '–ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω, —Ç–µ–ø–µ—Ä—å –∑–∞ –Ω–∏–º–∏ –Ω—É–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å —Å–∞–º–æ–º—É!')
        bot.send_message(id, text_off, parse_mode='Markdown', reply_markup=keyboard)
    else:
        bot.send_message(id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞', reply_markup=keyboard)


bot.polling(none_stop=True)
